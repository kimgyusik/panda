<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="sellerMapper">

	<resultMap id="sellerResultSet" type="Seller">
		<id property="sNo" column="s_no"/>
		<result property="sId" column="s_id"/>
		<result property="sPwd" column="s_pwd"/>
		<result property="sName" column="s_name"/>
		<result property="sAddress" column="s_address"/>
		<result property="sNum" column="s_num"/>
		<result property="sEmail" column="s_email"/>
		<result property="sPhone" column="s_phone"/>
		<result property="stNum" column="s_tnum"/>
		<result property="sbNum" column="s_bnum"/>
		<result property="storeName" column="storename"/>
		<result property="sCeoName" column="s_ceoname"/>
		<result property="sector" column="sector"/>
		<result property="sbAddress" column="s_baddress"/>
		<result property="sbPhone" column="s_bphone"/>
		<result property="sOk" column="s_ok"/>
		<result property="sEmailKey" column="s_email_key"/>
		<result property="sStatus" column="s_status"/>
		<result property="sViolate" column="s_violate"/>
	</resultMap>
	
	<resultMap id="streamingResultSet" type="Streaming">
		<id property="stNo" column="st_no"/>
		<result property="sNo" column="s_no"/>
		<result property="stTime" column="st_time"/>
		<result property="stTitle" column="stTitle"/>
		<result property="stStatus" column="st_status"/>
	</resultMap>
	

	<!-- 가입 -->
	<insert id="insertSeller" parameterType="Seller">
		insert into seller values( seller_seq.nextval, #{sId}, #{sPwd}, #{sName}, #{sAddress}, #{sNum}, #{sEmail}, #{sPhone}, #{stNum}, #{sbNum},
									#{storeName}, #{sCeoName}, #{sector}, #{sbAddress}, #{sbPhone}, default, default , 'N' , 0)
	</insert>
	
	<!-- 이메일인증 -->
	<update id="createAuthKey">
		update seller
		set s_emailKey = #{sEmail_key} 
		where sEmail = #{sEmail}
	</update>

	<!-- 로그인 -->
	<select id="loginSeller" parameterType="Seller" resultMap="sellerResultSet">
		select *
		from seller
		where s_id=#{sId}
	</select>
	
	<!-- 회원가입시 아이디 중복여부 -->
	<select id="sIdCheck" parameterType="string" resultType="_int">
		select count(*)
		from seller
		where s_id=#{sId} and s_status='Y'
	</select>
	
	
	<!-- 아이디 찾기 -->
	<select id="findsId" parameterType="String" resultType="String">
		select s_id 
		from seller
		where s_email = #{sEmail}
	</select>
	
	
	<!-- 정보 수정 -->
	<update id="updateSeller" parameterType="Seller">
		update seller
		set s_pwd=#{sPwd}, s_phone=#{sPhone}, s_address=#{sAddress}, storeName=#{storeName}
		, s_ceoName=#{sCeoName}, s_bphone=#{sbPhone}, s_bAddress=#{sbAddress}
		where s_id=#{sId}
	</update>
	
	<select id="getListCount" resultType="_int" parameterType="_int">
		select count(*)
		from product_option o
		where o.p_Id IN (select p.p_Id from product p where p.s_no=#{sNo}) and o_status = 'Y'
	</select>
	
	<update id="deleteSeller" parameterType="Seller">
		update seller
		set s_status='N'
		where s_name=#{sName} and s_id=#{sId} and s_pwd=#{sPwd}
	</update>
	
	<!-- 이메일 확인 -->
	<update id="emailConfirm" parameterType="Seller">
		update seller
		set s_email_key = 'Y'
		where s_Id=#{sId}
	</update>
	
	<!-- 정보바꾸기전 확인 -->
	<select id="updateConfirm" parameterType="Seller" resultMap="sellerResultSet">
		select *
		from seller
		where s_id=#{sId} and s_pwd=#{sPwd}
	</select>
	
	<update id="newPwd" parameterType="Seller">
		update seller
		set s_pwd=#{sPwd}
		where s_id=#{sId} and s_email=#{sEmail}
	</update>
	
	<!-- 주문확인 -->
	<select id="oListCount" resultType="_int" parameterType="_int">
		select count(*)
		from payment
	</select>
	
	<insert id="insertStreaming" parameterType="Streaming">
		insert into Streaming values(streaming_seq.nextval, #{sNo}, SYSDATE, #{stTitle},'Y')
	</insert>
	
	<select id="selectStreaming" resultMap="streamingResultSet" parameterType="_int">
		select *
		from Streaming
		where s_no = #{sNo} and st_status = 'Y'
	</select>
	
	<select id="selectStreamingStNO" resultMap="streamingResultSet" parameterType="_int">
		select *
		from Streaming
		where st_no = #{stNo} and st_status = 'Y'
	</select>
	
	<update id="pStopStream" parameterType="_int">
		update product
		set st_No=null
		where p_id=#{pId}
	</update>
	
	<update id="poStopStream" parameterType="_int">
		update product_option
		set st_price=null
		where p_id=#{pId}
	</update>
	
	<update id="deleteStreaming" parameterType="_int">
		update streaming
		set st_Status = 'N'
		where st_no=#{stNo}
	</update>
	
	<select id="getStNo" parameterType="_int" resultType="_int">
		select st_no
		from product
		where p_id = #{pId}
	</select>
	
	<select id="isStreaming" parameterType="_int" resultType="_int">
		select count(*)
		from streaming
		where s_No = #{sNo} and st_status = 'Y'
	</select>
	
	<!-- <select id="selectoList" resultMap="paymentsResultSet" parameterType="_int">
		select pm.*, p.p_name, po.o_name, pa.pa_change_name, s.s_no
		from payment pm
		left join product_option po on pm.o_no=po.o_no
		left join product p on p.p_id=po.p_id
		left join product_attachment pa on pa.p_id=p.p_id
		left join seller s on s.s_no = p.s_no
		where pa.pa_file_level = 1 and s.s_no=#{sNo}
	</select> -->

</mapper>